@font-face {
    src: url("fonts/Montserrat-Regular.ttf");
    font-family: Montserrat;
}

@font-fac src: url("fonts/Montserrat-Bold.ttf"); font-family: Montserrat-Bold; }

@font-face {
    src: url("fonts/Montserrat-ExtraBold.ttf");
    font-family: Montserrat-ExtraBold;
}

.node {
    width: 100px;
    height: 50px;
    background-color: blue;
    color: white;
    text-align: center;
    line-height: 50px;
    cursor: pointer;
}

.dragging {
    /* opacity: 0.5; */
}

html {
    height: 100%;
    xoverflow: hidden;
    /* border: 1px solid black; */
}

#editor {
    overflow-y: hidden;
    overflow-x: visible;
}

body {
    margin: 0px;
    padding: 0px;
    font-family: 'Montserrat';
    height: 100%;
    xoverflow: scroll;
    /* border: 1px solid black; */
}

.PropHeader {
    display: inline-block;
    width: 100%;
    flex-direction: row;
    flex-wrap: nowrap;
    align-content: center;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
}

div#canv-container {
    position: absolute;
    height: 100%;
    width: 100%;
    z-index: 1000;
    pointer-events: none;
    overflow: visible;
}

#wires {
    position: fixed;
    /* width: 1000px; */
    /* height: 1000px; */
    overflow: visible;
    /* border: 10px solid #0005; */
    pointer-events: none;
    z-index: 1000;
}

.interface {
    border: 1px solid #ccc;
    padding: 10px;
    margin-bottom: 10px;
    /* width: 25%; */
}

.method {
}

.method-button {
    border: 3px solid #0005;
    border-radius: 0.5em;
    margin-right: 0.5em;
}

.ast-node {
    border: 1px solid #0005;
    margin: 0.2em;
    padding: 0.2em;
    user-select: none; /* Prevent text selection */
    /* width: fit-content; */
    /* margin: auto; */
    text-align: left;
}

input.propHeaderText {
    width: fit-content;
    margin-left: 0.2em;
    margin-right: 0.2em;
}

.propHeaderLabel {
    display: inline;
}

.propHeaderCon.fa-solid {
    width: 2.2em;
    height: 1.2000000000000002em;
    text-align: center;
    vertical-align: baseline;
    background: red;
    border-radius: 1em;
    cursor: crosshair;
    margin: 0.2em;
    border: 0.2em solid #0004;
    position: relative;
    z-index: 2000;
    /* display: flex; */
    flex-direction: row;
}

.propHeaderCon.fa-solid:before {
    /* content: '\f090'; */
    padding: 0.1em;
    color: #fff;
    display: block;
    /* border: 1px solid #0009; */
    overflow: inherit;
}

.ast-node.MemberExpression {
    border: none;
    vertical-align: middle;
    position: relative;
    left: -2em;
}
 

button.headerButton.fa-solid.fa-trash {
    background-repeat: no-repeat;
    cursor: pointer;
    width: fit-content;
    height: fit-content;
    margin: auto;
    border-radius: 13.5em;
    border: 0.1em solid #0004;
    padding: 0.3em;
}

button.headerButton.fa-solid.fa-trash:hover {
    background: #f006;
}

.ast-node.createInstance {
    border: 0.5em solid #0003;
    border-radius: 1em;
    display: inline-block;
    text-align: center;
    position: absolute;
    /* left: 0px; */
    /* top: 61px; */
    cursor: move;
    background: #fff;
    /* z-index: 1500; */
}

.headerLabel {
    margin: 0.2em;
}

.ClassHeader {
    display: grid;
    grid-auto-flow: column;
    flex-direction: row;
    justify-content: center;
    align-content: center;
    flex-wrap: nowrap;
    align-items: center;
    justify-items: center;
}

.ast-node.Program {
    /* display: flex; */
    flex-wrap: wrap;
    flex-direction: row;
    align-content: center;
    justify-content: center;
    align-items: center;
    /* width: 100%; */
    /* white-space: pre-wrap; */
    text-align: center;
}

.ast-node.ClassDeclaration {
    cursor: pointer;
    width: fit-content;
    display: inline-block;
}

.ast-node.ClassDeclaration.mousedown:hover:before {
    xbackground: #0082;
    color: #000;
    text-decoration: none;
    box-shadow: 0px 0px 8px #000000;

}

.ast-node.ClassDeclaration:before {
    content: 'new';
    border: 0.2em solid #0005;
    border-radius: 0.5em;
    position: relative;
    right: 0px;
    margin: 0.2em;
    padding: 0.2em;
}

.ast-node.ClassDeclaration:hover:before {
    border: 0.2em solid #090;
    text-decoration: underline;
}

.ast-node.MethodDefinition {
    /* width: initial; */
    margin: auto;
    cursor: pointer;
    margin: 0.1em;
    border-radius: 0.5em;
}

.methodHeaderLabel {
    width: 100%;
}

.methodHeaderCon.fa-solid {
    background: #21a221;
    width: 2em;
    display: inline;
    border-radius: 2em;
    padding: 0.1em;
    padding-left: 0.5em;
    margin: auto;
    position: relative;
    left: 1.5em;
    color: #ffff;
    cursor: crosshair;
    border: 0.2em solid #0004;
    z-index: 2000;
}
@keyframes pulse {
  0% { color:#fff; box-shadow: 0 0 0 rgba(0, 0, 0, 1); }
  50% { color:red;box-shadow: 0 0 0px 10px rgba(0, 0, 0, 0); }
  100% { color:#fff;box-shadow: 0 0 0 rgba(0, 0, 0, 1); }
}
.methodHeaderCon.fa-solid.fa-arrow-right-to-bracket.pulse , .propHeaderCon.pulse {
 
    box-shadow: 0px 0px 40px 10px #000;
    animation: pulse 0.5s infinite;

}
 .methodHeaderCon, .propHeaderCon {
 
    

}
 
.MethodHeader {
    display: flex;
}

.ast-node.ast-property {
}

#editor {
    width: fit-content;
    /* display: flex; */
    padding: 1em;
    flex-direction: column-reverse;
}

.interface-label {
    font-weight: bold;
}

.method {
    margin-left: 20px;
    display: flex;
    width: 100%;
    flex-wrap: nowrap;
    flex-direction: row;
    align-content: stretch;
    justify-content: flex-start;
    align-items: baseline;
}
